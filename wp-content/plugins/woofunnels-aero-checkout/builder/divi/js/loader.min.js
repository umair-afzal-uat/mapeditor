"use strict";

function _instanceof(left, right) {
    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return !!right[Symbol.hasInstance](left);
    } else {
        return left instanceof right;
    }
}

function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof(obj) {
            return typeof obj;
        };
    } else {
        _typeof = function _typeof(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
    }
    return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
    if (!_instanceof(instance, Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}

function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}

function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}

function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function () {
        }));
        return true;
    } catch (e) {
        return false;
    }
}

function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}

function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {value: value, enumerable: true, configurable: true, writable: true});
    } else {
        obj[key] = value;
    }
    return obj;
}

var CheckoutForm = /*#__PURE__*/function (_React$Component) {
    _inherits(CheckoutForm, _React$Component);

    var _super = _createSuper(CheckoutForm);

    function CheckoutForm() {
        var _this;

        _classCallCheck(this, CheckoutForm);

        _this = _super.call(this);
        _this.timeout = null;
        _this.state = {
            formData: 'Loading ....'
        };
        return _this;
    }

    _createClass(CheckoutForm, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.run_ajax();
        }
    }, {
        key: "run_ajax",
        value: function run_ajax() {
            var _this2 = this;

            var settings = JSON.stringify(this.props);
            var div_container = jQuery('.wfacp_form_divi_container');
            div_container.addClass('wfacp_divi_loader');
            window.wfacp_send_ajax({
                'action': 'get_divi_form_data',
                'type': 'post',
                'data': settings,
                'headers': {
                    'Content-type': 'application/json'
                }
            }, function (rsp) {
                _this2.setState({
                    formData: rsp
                });

                div_container.removeClass('wfacp_divi_loader');
            });
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState, snapshot) {
            var _this3 = this;

            if (JSON.stringify(this.props) === JSON.stringify(prevProps)) {
                return;
            }

            clearTimeout(this.timeout);
            this.timeout = setTimeout(function () {
                _this3.run_ajax();
            }, 600);
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement("div", {
                className: "wfacp_form_divi_container wfacp_divi_loader"
            }, React.createElement("div", {
                className: "wfacp_divi_forms",
                id: "wfacp-e-form",
                dangerouslySetInnerHTML: {
                    __html: this.state.formData
                }
            }));
        }
    }], [{
        key: "css",
        value: function css(props) {
            var utils = window.ET_Builder.API.Utils;
            var wfacp_divi_style = [];
            wfacp_divi_style = wfacp_checkout_form_fields(utils, props);
            return [wfacp_divi_style];
        }
    }]);

    return CheckoutForm;
}(React.Component);

_defineProperty(CheckoutForm, "slug", 'wfacp_checkout_form');

var CheckoutForm_Summary = /*#__PURE__*/function (_React$Component2) {
    _inherits(CheckoutForm_Summary, _React$Component2);

    var _super2 = _createSuper(CheckoutForm_Summary);

    function CheckoutForm_Summary() {
        var _this4;

        _classCallCheck(this, CheckoutForm_Summary);

        _this4 = _super2.call(this);
        _this4.timeout = null;
        _this4.state = {
            formData: 'Loading ....'
        };
        return _this4;
    }

    _createClass(CheckoutForm_Summary, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            this.run_ajax();
        }
    }, {
        key: "run_ajax",
        value: function run_ajax() {
            var _this5 = this;

            var settings = JSON.stringify(this.props);
            var div_container = jQuery('.wfacp_checkout_form_summary');
            div_container.addClass('wfacp_divi_loader');
            window.wfacp_send_ajax({
                'action': 'get_divi_order_summary_data',
                'type': 'post',
                'data': settings,
                'headers': {
                    'Content-type': 'application/json'
                }
            }, function (rsp) {
                _this5.setState({
                    formData: rsp
                });

                div_container.removeClass('wfacp_divi_loader');
            });
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState, snapshot) {
            var _this6 = this;

            if (JSON.stringify(this.props) === JSON.stringify(prevProps)) {
                return;
            }

            clearTimeout(this.timeout);
            this.timeout = setTimeout(function () {
                _this6.run_ajax();
            }, 600);
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement("div", {
                className: "wfacp_checkout_form_summary wfacp_divi_loader"
            }, React.createElement("div", {
                className: "wfacp_divi_forms",
                id: "wfacp-mini-cart",
                dangerouslySetInnerHTML: {
                    __html: this.state.formData
                }
            }));
        }
    }], [{
        key: "css",
        value: function css(props) {
            var utils = window.ET_Builder.API.Utils;
            var wfacp_divi_style = wfacp_checkout_form_summary_fields(utils, props);
            return [wfacp_divi_style];
        }
    }]);

    return CheckoutForm_Summary;
}(React.Component);

_defineProperty(CheckoutForm_Summary, "slug", 'wfacp_checkout_form_summary');

(function ($) {
    window.wfacp_prepare_divi_css = function (data, utils, props) {
        var main_output = [];

        for (var m in data.margin_padding) {
            (function (key, selector) {
                var spacing = props[key];

                if (spacing != null && spacing !== '' && spacing.split("|")) {
                    var element_here = key.indexOf("_padding");
                    var ele = "padding";

                    if (element_here === -1) {
                        ele = "margin";
                    }

                    spacing = props[key].split("|");
                    var enable_edited = props[key + "_last_edited"];
                    var key_tablet = props[key + "_tablet"];
                    var key_phone = props[key + "_phone"];
                    var enable_responsive_active = enable_edited && enable_edited.startsWith("on");
                    main_output.push({
                        'selector': selector,
                        'declaration': ele + "-top: ".concat(spacing[0], "  !important; ") + ele + "-right: ".concat(spacing[1], " !important; ") + ele + "-bottom: ".concat(spacing[2], "  !important; ") + ele + "-left: ".concat(spacing[3], "  !important;")
                    });

                    if (key_tablet && enable_responsive_active && key_tablet && '' !== key_tablet) {
                        var spacing_tablet = key_tablet.split("|");
                        main_output.push({
                            'selector': selector,
                            'declaration': ele + "-top: ".concat(spacing_tablet[0], " !important;") + ele + "-right: ".concat(spacing_tablet[1], " !important; ") + ele + "-bottom: ".concat(spacing_tablet[2], "  !important; ") + ele + "-left: ".concat(spacing_tablet[3], "  !important;"),
                            'device': 'tablet'
                        });
                    }

                    if (key_phone && enable_responsive_active && key_phone && '' !== key_phone) {
                        var spacing_phone = key_phone.split("|");
                        main_output.push({
                            'selector': selector,
                            'declaration': ele + "-top: ".concat(spacing_phone[0], " !important; ") + ele + "-right: ".concat(spacing_phone[1], " !important; ") + ele + "-bottom: ".concat(spacing_phone[2], " !important; ") + ele + "-left: ".concat(spacing_phone[3], " !important;"),
                            'device': 'phone'
                        });
                    }
                }
            })(m, data.margin_padding[m]);
        }

        for (var n in data.normal_data) {
            (function (key, selector, css_prop) {
                main_output.push({
                    'selector': selector,
                    'declaration': "".concat(css_prop, ":").concat(props[key]) + '!important'
                });
                var device_enable = props[key + "_last_edited"] && props[key + "_last_edited"].startsWith('on');

                if (device_enable === true) {
                    main_output.push({
                        'selector': selector,
                        'declaration': "".concat(css_prop, ":").concat(props[key + "_tablet"]) + '!important',
                        'device': 'tablet'
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "".concat(css_prop, ":").concat(props[key + "_phone"]) + '!important',
                        'device': 'phone'
                    });
                }
            })(n, data.normal_data[n]['selector'], data.normal_data[n]['property']);
        }

        for (var t in data.typography_data) {
            (function (key, selector) {
                var property = data.typography[key];
                main_output.push({
                    'selector': selector,
                    'declaration': utils.setElementFont(props[property])
                });
            })(t, data.typography_data[t]);
        }

        for (var border_key in data.border_data) {
            var selector = data.border_data[border_key];

            (function (border_key, selector) {
                var border_type = props[border_key + '_border_type'];
                var width_top = props[border_key + '_border_width_top'];
                var width_bottom = props[border_key + '_border_width_bottom'];
                var width_left = props[border_key + '_border_width_left'];
                var width_right = props[border_key + '_border_width_right'];
                var border_color = props[border_key + '_border_color'];
                var radius_top_left = props[border_key + '_border_radius_top'];
                var radius_top_right = props[border_key + '_border_radius_bottom'];
                var radius_bottom_right = props[border_key + '_border_radius_left'];
                var radius_bottom_left = props[border_key + '_border_radius_right'];

                if ('none' === border_type) {
                    main_output.push({
                        'selector': selector,
                        'declaration': 'border-style:none !important;'
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': 'border-radius:none !important;'
                    });
                } else {
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-color:".concat(border_color, " !important;")
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-style:".concat(border_type, " !important;")
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-top-width:".concat(width_top, "px !important;")
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-bottom-width:".concat(width_bottom, "px !important;")
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-left-width:".concat(width_left, "px !important;")
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-right-width:".concat(width_right, "px !important;")
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-top-left-radius:".concat(radius_top_left, "px !important;")
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-top-right-radius:".concat(radius_top_right, "px !important;")
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-bottom-right-radius:".concat(radius_bottom_right, "px !important;")
                    });
                    main_output.push({
                        'selector': selector,
                        'declaration': "border-bottom-left-radius:".concat(radius_bottom_left, "px !important;")
                    });
                }
            })(border_key, selector);
        }

        for (var shadow_key in data.box_shadow) {
            var _selector = data.box_shadow[shadow_key];

            (function (border_key, selector) {
                var enabled = props[border_key + '_shadow_enable'];
                var type = props[border_key + '_shadow_type'];
                var horizontal = props[border_key + '_shadow_horizontal'];
                var vertical = props[border_key + '_shadow_vertical'];
                var blur = props[border_key + '_shadow_blur'];
                var spread = props[border_key + '_shadow_spread'];
                var color = props[border_key + '_shadow_color'];

                if ('on' == enabled) {
                    main_output.push({
                        'selector': selector,
                        'declaration': "box-shadow:".concat(horizontal, "px ").concat(vertical, "px ").concat(blur, "px ").concat(spread, "px ").concat(color, " ").concat(type, " !important;")
                    });
                } else {
                    main_output.push({
                        'selector': selector,
                        'declaration': 'box-shadow:none !important;'
                    });
                }
            })(shadow_key, _selector);
        }

        return main_output;
    };

    var aero_id = $('#wfacp_aero_checkout_id').attr('content');

    function setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
        var expires = "expires=" + d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }

    setCookie('wfacp_elementor_open_page', '', -5);
    $(document.body).on('wfacp_step_switching', function (e, v) {
        if (v.hasOwnProperty('current_step')) {
            var str = aero_id + '@' + v.current_step;
            setCookie('wfacp_divi_open_page', str, 1);
        }
    });
    $(document.body).on('click', '.et-fb-form__toggle', function () {
        var el = $(this);
        setTimeout(function (el) {
            var siblings = el.children('.et-fb-form__group');

            if (siblings.length === 0) {
                return;
            }

            var border_top = el.find('.wfacp_border_width_top');
            border_top.each(function () {
                $(this).closest('.et-fb-form__group').addClass('wfacp_divi_border wfacp_divi_border_width_start wfacp_border_width_top');
            });
            var border_bottom = el.find('.wfacp_border_width_bottom');
            border_bottom.each(function () {
                $(this).closest('.et-fb-form__group').addClass('wfacp_divi_border  wfacp_border_width_bottom');
            });
            var border_left = el.find('.wfacp_border_width_left');
            border_left.each(function () {
                $(this).closest('.et-fb-form__group').addClass('wfacp_divi_border  wfacp_border_width_left');
            });
            var border_right = el.find('.wfacp_border_width_right');
            border_right.each(function () {
                $(this).closest('.et-fb-form__group').addClass('wfacp_divi_border wfacp_divi_border_width_end  wfacp_border_width_right');
            });
            siblings.each(function () {
                var heading = $(this).closest('.wfacp_heading_divi_builder');

                if (heading.length > 0) {
                    heading.remove();
                    var text = $(this).find('.et-fb-form__label-text');

                    if (text.length > 0) {
                        $(this).closest('.et-fb-form__label').replaceWith("<h3 class='wfacp_c_heading'>" + text.text() + "</h3>");
                    }
                }
            });
        }, 50, el);
    });
    $(document.body).on('keypress', '.wfacp_divi_textarea', function (e) {
        // IE
        var keynum;

        if (window.event) {
            keynum = e.keyCode;
        } else if (e.which) {
            keynum = e.which;
        }

        if (keynum === 13) {
            return false;
        }
    });
    $(document.body).on('keypress', '.wfacp_divi_border textarea', function (e) {
        // IE
        var keynum;

        if (window.event) {
            keynum = e.keyCode;
        } else if (e.which) {
            keynum = e.which;
        }

        if (keynum === 13) {
            return false;
        }
    });
    $(window).on('et_builder_api_ready', function (event, API) {
        API.registerModules([CheckoutForm, CheckoutForm_Summary]);
    });
})(jQuery);